name: Connect to DigitalOcean Droplet

on:
  push:
    branches:
      - ditialocean

jobs:
  connect:
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH client
        run: sudo apt-get install -y sshpass

      - name: Connect to DigitalOcean Droplet
        env:
          SSH_PASSWORD: ${{ secrets.DROPLET_PASSWORD }}
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no root@$DROPLET_IP << EOF
          ls -l
          pwd
          EOF
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Build ReactJS app
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: react-app-build
          path: build

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: react-app-build
          path: ./build
      - name: build the docker image
        run: |
          docker rmi -f react-iam4:latest | true
          docker build -t react-iam4:latest .
      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        with:
          name: react-appp-build
          path: image
      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: react-appp-build
          path: ./image
          

      - name: build the docker image container
        run: |
          docker rm -f my-container4 | true
          docker run -d -p 3003:3003 --name my-container react-iam4:latest

      - name: Transfer build to Droplet
        env:
          SSH_PASSWORD: ${{ secrets.DROPLET_PASSWORD }}
          DROPLET_IP: ${{ secrets.DROPLET_IP }}
        run: |
          sshpass -p "$SSH_PASSWORD" scp -o StrictHostKeyChecking=no -r ./build root@$DROPLET_IP:/var/www/react-app
